[
    {
        "main": "const { app, BrowserWindow} = require('electron')\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 800,\n        height: 600,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    //win.webContents.openDevTools()\n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)",
        "nombre": "PLANTILLA BASICA",
        "characters": "<xmp> <!-- RECUERDA QUITAR ESTAS ETIQUETAS -->\n<!DOCTYPE html>\n<html>\n\n<header>\n    <title id=\"titulo\">Titulo</title>\n    <!-- stylesheets -->\n    <link rel=\"stylesheet\" href=\"./css/photon.min.css\">\n</header>\n\n<body>\n    <div class=\"window\">\n        <header class=\"toolbar toolbar-header\">\n            <h1 class=\"title\">\n                TOOLBAR TITLE\n            </h1>\n        </header>\n        <div class=\"window-content\">\n            <div class=\"pane-group\">\n                <div class=\"pane-sm sidebar\">\n                    SIDEBAR IZQUIERDO\n                </div>\n                <div class=\"pane\">\n                    PANNEL DERECHO\n                </div>\n            </div>\n        </div>\n\n        <footer class=\"toolbar toolbar-footer\">\n            <h1 class=\"title\">\n                TOOLBAR FOOTER\n            </h1>\n        </footer>\n    </div>\n    <script src=\"./functions.js\" ></script>\n</body>\n\n</html>\n</xmp>",
        "info": "//FILESYSTEM\n//DEFINICIONES\n//MAIN\n//FUNCIONES\n//LISTENERS"
    },
    {
        "main": "EN TERMINAL LANZAMOS\nnpm init -y\nnpm install electron",
        "nombre": "CREAR NUEVO PROYECTO",
        "characters": "EN CASO DE NECESITAR LAS NOTIFICACIONES: npm install @electron/remote  \n\nMODIFIAMOS PACKAGE.JSON:\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"electron .\"\n  }",
        "info": "LANZAMOS LA APLICACION\nnpm start"
    },
    {
        "main": "const { app, BrowserWindow, dialog} = require('electron')\n//requisito de dialog\nrequire('@electron/remote/main').initialize()\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 800,\n        height: 600,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    //win.webContents.openDevTools()\n    //requisito de dialog\n    require(\"@electron/remote/main\").enable(win.webContents) \n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)",
        "nombre": "SHOWMESSAGEBOX",
        "characters": "INTRODUCIR EN TERMINAL EN CASO DE NECESITAR LAS NOTIFICACIONES: \nnpm install @electron/remote  \n",
        "info": "const { dialog } = require('@electron/remote')\nconst options;\n\noptions = {\n    type: 'none',\n    title: 'none',\n    message: 'Este es un mensaje none',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'info',\n    title: 'Info',\n    message: 'Este es un mensaje informativo',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'error',\n    title: 'error',\n    message: 'Este es un mensaje error',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'question',\n    title: 'question',\n    message: 'Este es un mensaje question',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'warning',\n    title: 'warning',\n    message: 'Este es un mensaje warning',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'question',\n    title: 'Pregunta',\n    message: '¿Quieres continuar?',\n    buttons: ['Sí', 'No'],\n    defaultId: 1, //btn por defecto (0/1)\n};\nlet respuestaUsuario = dialog.showMessageBoxSync(options);"
    },
    {
        "main": "",
        "nombre": "ALERT",
        "characters": "",
        "info": "alert(\"Hola mundo\");\n"
    },
    {
        "main": "",
        "nombre": "TEXTAREA (Texto multilinea)",
        "characters": "<textarea id=\"multilinea\" rows=\"3\" cols=\"50\" style=\"width: 99%;\"></textarea>",
        "info": "let multilinea = document.getElementById(\"multilinea\");\n\nmultilinea.value = \"hola, este es el contenido del texto multilinea llamado textarea\";"
    },
    {
        "main": "",
        "nombre": "ARRAY 2",
        "characters": "FUNCTIONS.JS\nGUARDAR / ACTUALIZAR\nbtnGuardar.addEventListener('click', () => {\n    const nuevo = {\n        \"main\": main.value,\n        \"superhero\": superhero.value,\n        \"characters\": encarnaciones.value,\n        \"info\": informacion.value,\n    };\n    //supers.push(nuevo);\n    supers.splice(pos,1,nuevo)\n\n    fs.writeFileSync('./data/superheroes.json', JSON.stringify(supers));\n    fs.close;\n})\n\nbtnNuevo.addEventListener('click', () => {\n    const nuevo = {\n        \"main\": main.value,\n        \"superhero\": superhero.value,\n        \"characters\": encarnaciones.value,\n        \"info\": informacion.value,\n    };\n    //supers.push(nuevo);\n    supers.splice(pos,0,nuevo)\n\n    fs.writeFileSync('./data/superheroes.json', JSON.stringify(supers));\n    fs.close;\n})",
        "info": "ELIMINA 1 ELEMENTO DESDE pos\nmiArray.splice(pos,1)\nELIMINA 1 ELEMENTO Y LO REEMPLAZA POR i\nmiArray.splice(pos,1,i)\n"
    },
    {
        "main": "",
        "nombre": "ARRAY BIDIMENSIONAL",
        "characters": "",
        "info": "function nuevoArray(filas, columnas, valorInicial) { //CREACION DE ARRAY:  let miArray = nuevoArray(filas,columnas,0);\n    let matriz = [];\n    for (let i = 0; i < filas; i++) { matriz[i] = Array(columnas).fill(valorInicial); }\n    return matriz;\n  }"
    },
    {
        "main": "",
        "nombre": "CHECK",
        "characters": "<p id=\"ckAText\"><input type=\"checkbox\" id=\"ckA\" style=\"margin: 2px;\">Acepto condiciones</p>",
        "info": "let ckA = document.getElementById(\"ckA\");\n\n\nckA.checked = true;\n"
    },
    {
        "main": "",
        "nombre": "STRING MULTILINEA",
        "characters": "",
        "info": "let contenido = `\n< div class=\"form-group\" style = \"margin: 10px;\" >\n    <img id=\"imagen\" class=\"img-circle media-object pull-left\" src=\"./img/4.png\" width=\"32\" height=\"32\">\n    <br><br><br>\n`;"
    },
    {
        "main": "",
        "nombre": "JSON",
        "characters": "",
        "info": "const fs = require('fs');\nlet miArray = new Array();\n\n<!-- JSON 2 ARRAY -->\nlet fichero = fs.readFileSync('./ARCHIVO.json');\nmiArray = JSON.parse(fichero);\nfichero.close;\n\n\n<!-- AGREGA OBJETO Y GUARDA ARRAY 2 JSON -->\nbtnGuardar.addEventListener('click', () => {\n    let comprados = new Array();\n\n    <!-- NUEVO OBJETO EN ARRAY -->\n    const casa = {\n        \"imagen\": pisos[contador].imagen,\n        \"precio\": pisos[contador].precio,\n        \"altura\": pisos[contador].altura,\n    };\n    comprados.push(casa);\n\n    <!-- GUARDA ARRAY-->\n    fs.writeFileSync('./miCesta.json', JSON.stringify(casa));\n    fs.close;\n})"
    },
    {
        "main": "",
        "nombre": "IMAGEN REDONDA",
        "characters": "<img id=\"imagen\" class=\"img-circle media-object pull-left\" src=\"./img/BlackCanary.jpg\" width=\"175\" height=\"258\">",
        "info": "let imagen = document.getElementById(\"imagen\");\n\n\nimagen.src = \"./imgs/A.jpg\";"
    },
    {
        "main": "",
        "nombre": "IMAGEN",
        "characters": "<img id=\"imagen\" src=\"./img/BlackCanary.jpg\" style=\"float: right;\">",
        "info": "let imagen = document.getElementById(\"imagen\");\n\n\nimagen.src = \"./imgs/A.jpg\";"
    },
    {
        "main": "",
        "nombre": "TEXTO",
        "characters": "<input type=\"texto\" id=\"texto\" placeholder=\"Tu texto aqui\"><br>",
        "info": "let texto = document.getElementById(\"texto\");\n\n\ntexto.addEventListener('change',()=>{ \n    ...\n})\n\ntexto.addEventListener(\"keyup\", (event) => {\n    ...\n})"
    },
    {
        "main": "",
        "nombre": "DIVISION HORIZONTAL",
        "characters": "<br>\n<hr style=\"width: 90%; margin:auto;\"> <!-- linea horizontal -->",
        "info": ""
    },
    {
        "main": "",
        "nombre": "FUNCION RND",
        "characters": "",
        "info": "function rnd(max){\n    //0 no es una respuesta valida\n    return  Math.floor(Math.random() * max) + 1;\n}\n"
    },
    {
        "main": "",
        "nombre": "CheckBox + Boton",
        "characters": "<input type=\"checkbox\" id=\"opcion1\" name=\"opciones\"> <!-- name sirve para iterar sobre los elementos de este tipo con un bucle -->\n<label for=\"opcion1\">Opción 1</label>\n<br>\n<input type=\"checkbox\" id=\"opcion2\" name=\"opciones\">\n<label for=\"opcion2\">Opción 2</label>\n<br>\n<input type=\"checkbox\" id=\"opcion3\" name=\"opciones\">\n<label for=\"opcion3\">Opción 3</label>\n<br>\n<button type=\"button\" onclick=\"mostrarEstado()\">Mostrar Estado</button>",
        "info": "function mostrarEstado() {\n    // Obtener todos los elementos checkbox\n    var checkboxes = document.getElementsByName('opciones');\n\n    // Iterar sobre los checkboxes para mostrar su estado\n    for (var i = 0; i < checkboxes.length; i++) {\n        var checkbox = checkboxes[i];\n        alert('Checkbox ' + checkbox.value + ': ' + checkbox.checked);\n    }\n}"
    },
    {
        "main": "",
        "nombre": "RadioButton",
        "characters": "<input type=\"radio\" id=\"radio1\" name=\"grupoA\" value=\"a\"> A\n<input type=\"radio\" id=\"radio2\" name=\"grupoA\" value=\"b\" checked> B  <!--EL VALOR GUARDADO EN RADIO2.VALUE ES EL INDICADO AQUI (\"b\")-->\n<br><br>\n<input type=\"radio\" id=\"radio3\" name=\"grupoB\" value=\"c\" checked> C\n<input type=\"radio\" id=\"radio4\" name=\"grupoB\" value=\"d\"> D",
        "info": "let radio1 = document.getElementById(\"radio1\");\nlet radio2 = document.getElementById(\"radio2\");\n\nradio1.addEventListener('click', () => {\n    if (radio1.checked) {\n        alert(radio1.value);\n    }\n})\n\nradio2.addEventListener('click', () => {\n    if (radio2.checked){\n        alert(radio2.value); //LECTURA DE RADIO2.VALUE\n    }\n})"
    },
    {
        "main": "EN TERMINAL LANZAMOS\nnpm init -y\nnpm install electron",
        "nombre": "CREAR NUEVO PROYECTO",
        "characters": "EN CASO DE NECESITAR LAS NOTIFICACIONES: npm install @electron/remote  \n\nMODIFIAMOS PACKAGE.JSON:\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"electron .\"\n  }",
        "info": "LANZAMOS LA APLICACION\nnpm start"
    }
]