[{"nombre":"JS_CODE select","main":"","characters":"<select id=\"desplegable\"></select>","info":"let desplegable = document.getElementById(\"desplegable\");\n\n//agregar varlores al desplegable ordenados alfabeticamente\nfunction desplegableAdd(texto) { \n    let opcion = document.createElement(\"option\");\n    opcion.text = texto;\n    let totalOpciones = desplegable.options.length;\n    // Recorre opciones y busca posición adecuada para la nueva opción\n    for (let i = 0; i < totalOpciones; i++) {\n        if (texto < desplegable.options[i].text) {\n            desplegable.add(opcion, i);\n            return; // Sal del bucle\n        }\n    }\n    // Si la nueva opción debe ir al final\n    desplegable.add(opcion);\n}\n\n//LEER VALORES DEL DESPLEGABLE\nfunction cambiaImg(){\n    if (desplegable.value==\"Estudios\"){\n        imagen.src = \"./imgs/estudios.png\";\n    }\n}\n\n//EVENTO\ndesplegable.addEventListener('change', () => {\n    ...\n});"},{"nombre":"HTML input radio","main":"","characters":"<input type=\"radio\" id=\"radio1\" name=\"grupoA\"> A\n<input type=\"radio\" id=\"radio2\" name=\"grupoA\" checked> B  \n<br><br>\n<input type=\"radio\" id=\"radio3\" name=\"grupoB\" checked> C\n<input type=\"radio\" id=\"radio4\" name=\"grupoB\" > D","info":"let radio1 = document.getElementById(\"radio1\");\nlet radio2 = document.getElementById(\"radio2\");\n\nradio1.addEventListener('click', () => {\n    if (radio1.checked) {\n        alert(radio1.value);\n    }\n})"},{"nombre":"HTML input checkbox","main":"","characters":"<input type=\"checkbox\" id=\"opcion1\">\n<label for=\"opcion1\">Opción 1</label><br>\n\n<input type=\"checkbox\" id=\"opcion2\">\n<label for=\"opcion2\">Opción 2</label><br>\n\n<input type=\"checkbox\" id=\"opcion3\">\n<label for=\"opcion3\">Opción 3</label>","info":"let opcion1 = document.getElementsByName(\"opcion1\");\n\nalert('Checkbox: ' + opcion1.checked);"},{"nombre":"JS_CODE Math.random()","main":"","characters":"","info":"// Obtiene un numero al azar\nfunction rnd(max){\n    //0 no es una respuesta valida\n    return  Math.floor(Math.random() * max) + 1;\n}"},{"nombre":"HTML hr (division horizontal)","main":"","characters":"<br>\n<hr style=\"width: 90%; margin:auto;\"> <!-- linea horizontal -->","info":""},{"nombre":"HTML input texto","main":"","characters":"<input type=\"texto\" id=\"texto\" placeholder=\"Tu texto aqui\"><br>","info":"let texto = document.getElementById(\"texto\");\n\ntexto.addEventListener('change',()=>{ \n    ...\n})"},{"nombre":"HTML img","main":"","characters":"<img id=\"imagen\" class=\"img-circle media-object pull-left\" src=\"./img/BlackCanary.jpg\" width=\"90\" height=\"105\">\n<img id=\"imagen2\" src=\"./img/BlackCanary.jpg\" style=\"float: left;\" width=\"90\" height=\"105\">","info":"let imagen = document.getElementById(\"imagen\");\n\nimagen.src = \"./imgs/A.jpg\";"},{"nombre":"JS_CODE string multilinea","main":"","characters":"","info":"let btn7 = document.getElementById(\"btn7\");\n\nbtn7.addEventListener(\"click\", (event) => {\n\t//TODO\n});"},{"nombre":"HTML button","main":"","characters":"<button id=\"btn6\" class=\"btn btn-default\">btn gris ◄ </button>\n<button id=\"btn7\" class=\"btn btn-primary\">btn azul ► </button>\n<button id=\"btn8\" class=\"btn btn-positive\">btn verde</button>\n<button id=\"btn9\" class=\"btn btn-negative\">btn rojo</button>\n<button id=\"btn10\" class=\"btn btn-warning\">btn naranja</button>","info":"let btn7 = document.getElementById(\"btn7\");\n\nbtn7.addEventListener(\"click\", (event) => {\n\t//TODO\n});"},{"nombre":"JS split()","main":"","characters":"","info":"// Dividimos el array a partir del caracter _\nconst cadena = \"Hola_mundo!\";\nconst palabras = cadena.split(\"_\");\nconsole.log(palabras); // Salida: [\"Hola\", \"mundo!\"]\n"},{"nombre":"JS forEach","main":"","characters":"","info":"const array = [\"Elemento 1\", \"Elemento 2\", \"Elemento 3\"];\narray.forEach(function(elemento) {\n  console.log(elemento);\n});"},{"nombre":"JS splice()","main":"","characters":"","info":"let a = [\"a\",\"b\",\"c\",\"d\",\"e\"];\n//Splice elimina elementos a partir de una posicion y opcionalmente agrega elementos nuevos\n//Elimina 3 elementos desde la posicion 1\na.splice(1,3);\n//elimina 1 elemento desde la posicion 1\na.splice(1,1);\n//elimina 1 elemento desde la posicion 1 e inserta \"g\" y \"h\"\na.splice(1,1,\"g\",\"h\");\n//elimina 0 elementos desde la sposicion 1 e inserta \"i\"\na.splice(0,0,\"i\");"},{"nombre":"HTML textarea","main":"//deshabilita notificaciones de seguridad\nprocess.env.ELECTRON_DISABLE_SECURITY_WARNINGS = true;\n\nconst { app, BrowserWindow, dialog} = require('electron')\n//requisito de dialog\nrequire('@electron/remote/main').initialize()\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 1500,\n        height: 700,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    win.webContents.openDevTools()\n    //requisito de dialog\n    require(\"@electron/remote/main\").enable(win.webContents) \n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)","characters":"<textarea id=\"multilinea\" rows=\"3\" cols=\"50\" style=\"width: 99%;\"></textarea>","info":"let multilinea = document.getElementById(\"multilinea\");\n\nmultilinea.value = \"hola, este es el contenido del texto multilinea llamado textarea\";"},{"nombre":"JS alert()","main":"","characters":"","info":"alert(\"Hola mundo\");\n"},{"nombre":"_Plantilla","main":"//deshabilita notificaciones de seguridad\nprocess.env.ELECTRON_DISABLE_SECURITY_WARNINGS = true;\n\nconst { app, BrowserWindow, dialog} = require('electron')\n//requisito de dialog\nrequire('@electron/remote/main').initialize()\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 1500,\n        height: 700,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    win.webContents.openDevTools()\n    //requisito de dialog\n    require(\"@electron/remote/main\").enable(win.webContents) \n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)","characters":"<xmp> <!-- RECUERDA QUITAR ESTAS ETIQUETAS -->\n<!DOCTYPE html>\n<html>\n<header>\n    <title id=\"titulo\">Titulo</title>\n    <!-- stylesheets -->\n    <link rel=\"stylesheet\" href=\"./css/photon.min.css\">\n</header>\n\n<body>\n    <div class=\"window\">\n        <header class=\"toolbar toolbar-header\">\n            <h1 class=\"title\">\n                TOOLBAR TITLE\n            </h1>\n        </header>\n        <div class=\"window-content\">\n            <div class=\"pane-group\">\n                <div class=\"pane-sm sidebar\">\n                    SIDEBAR IZQUIERDO\n                </div>\n                <div class=\"pane\">\n                    PANNEL DERECHO\n                </div>\n            </div>\n        </div>\n\n        <footer class=\"toolbar toolbar-footer\">\n            <h1 class=\"title\">\n                TOOLBAR FOOTER\n            </h1>\n        </footer>\n    </div>\n    <script src=\"./functions.js\"></script>\n</body>\n</html>\n</xmp>","info":"//************************************** FILESYSTEM **************************************\nconst fs = require('fs');\n\n//************************************** DEFINICIONES **************************************\nconst remote = require('@electron/remote');\nconst { dialog } = require('@electron/remote');\n\n//************************************** MAIN **************************************\n//************************************** LISTENERS **************************************\n//************************************** FUNCIONES **************************************"},{"nombre":"JS dialog.showMessageBox()","main":"const { app, BrowserWindow, dialog} = require('electron')\n//requisito de dialog\nrequire('@electron/remote/main').initialize()\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 800,\n        height: 600,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    //win.webContents.openDevTools()\n    //requisito de dialog\n    require(\"@electron/remote/main\").enable(win.webContents) \n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)","characters":"INTRODUCIR EN TERMINAL EN CASO DE NECESITAR LAS NOTIFICACIONES: \nnpm install @electron/remote  ","info":"const { dialog } = require('@electron/remote')\nconst options;\n\noptions = {\n    type: 'none',\n    title: 'none',\n    message: 'Este es un mensaje none',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'info',\n    title: 'Info',\n    message: 'Este es un mensaje informativo',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'error',\n    title: 'error',\n    message: 'Este es un mensaje error',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'question',\n    title: 'question',\n    message: 'Este es un mensaje question',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'warning',\n    title: 'warning',\n    message: 'Este es un mensaje warning',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'question',\n    title: 'Pregunta',\n    message: '¿Quieres continuar?',\n    buttons: ['Sí', 'No'],\n    defaultId: 1, //btn por defecto (0/1)\n};\nlet respuestaUsuario = dialog.showMessageBoxSync(options);"}]