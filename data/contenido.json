[{"nombre":"APP Genera objetos en bucle","main":"//deshabilita notificaciones de seguridad\nprocess.env.ELECTRON_DISABLE_SECURITY_WARNINGS = true;\n\nconst { app, BrowserWindow, dialog} = require('electron')\n//requisito de dialog\nrequire('@electron/remote/main').initialize()\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 1500,\n        height: 700,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    win.webContents.openDevTools()\n    //requisito de dialog\n    require(\"@electron/remote/main\").enable(win.webContents) \n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)\n","characters":"<xmp> <!-- RECUERDA QUITAR ESTAS ETIQUETAS -->\n<!DOCTYPE html>\n<html>\n\n<header>\n    <title id=\"titulo\">Titulo</title>\n    <!-- stylesheets -->\n    <link rel=\"stylesheet\" href=\"./css/photon.min.css\">\n</header>\n\n<body>\n    <div class=\"window\">\n        <header class=\"toolbar toolbar-header\">\n            <h1 class=\"title\">\n                TOOLBAR TITLE\n            </h1>\n        </header>\n        <div class=\"window-content\">\n            <div class=\"pane-group\">\n                <div id=\"izquierdo\" class=\"pane-sm sidebar\">\n                    <button id=\"btnGenera\" style=\"margin: 5px;\" class=\"btn btn-primary\">Genera labels</button>\n                    <button id=\"btnCambia\" style=\"margin: 5px;\"class=\"btn btn-primary\">Cambia contenido en labels</button>\n                    <button id=\"btnLee\" style=\"margin: 5px;\" class=\"btn btn-primary\">Lee contenido en labels</button>\n                </div>\n                <div id=\"derecho\" class=\"pane\">\n\n                </div>\n            </div>\n        </div>\n\n        <footer class=\"toolbar toolbar-footer\">\n            <h1 class=\"title\">\n                TOOLBAR FOOTER\n            </h1>\n        </footer>\n    </div>\n    <script src=\"./functions.js\"></script>\n</body>\n\n</html>","info":"//************************************** FILESYSTEM **************************************\n\n//************************************** DEFINICIONES **************************************\nlet numLabels = 8;\n\nlet sidebarDerecho = document.getElementById(\"derecho\");\n\nlet btnGenera = document.getElementById(\"btnGenera\")\nlet btnCambia = document.getElementById(\"btnCambia\")\nlet btnLee = document.getElementById(\"btnLee\")\n//************************************** MAIN **************************************\n\n//************************************** LISTENERS **************************************\nbtnGenera.addEventListener('click', () => {\n    generaLabels();\n})\n\nbtnCambia.addEventListener('click', () => {\n    cambiaLabels() \n})\n\nbtnLee.addEventListener('click', () => {\n    leeLabel()\n})\n\n//************************************** FUNCIONES **************************************\n\nfunction generaLabels() {\n    let contenido = \"\"\n    for (let i = 0; i < numLabels; i++) {\n        contenido = contenido + '<label id=\"label' + i + '\">Comentario ' + i + '</label><br>\\n';\n    }\n    sidebarDerecho.innerHTML = contenido;\n}\n\nfunction cambiaLabels() {\n    for (let i = 0; i < numLabels; i++) {\n        let labelActual = document.getElementById(\"label\" + i);\n        labelActual.innerHTML = \"Cambiado contenido de label \" + i\n    }\n}\n\nfunction leeLabel(){\n    for (let i = 0; i<numLabels; i++){\n        let labelActual = document.getElementById(\"label\" + i);\n        alert(\"El contenido de label\"+i+\" es \"+labelActual.innerHTML);\n    }\n}"},{"nombre":"APP Json2 array Json","main":"[\n    {\n        \"id\": 0,\n        \"superhero\": \"Batman\",\n        \"publisher\": \"DC Comics\",\n        \"alter_ego\": \"Bruce Wayne\",\n        \"first_appearance\": \"Detective Comics #27\",\n        \"characters\": \"Bruce Wayne\",\n        \"img\": \"batman.jpg\"\n    },\n    {\n        \"id\": 1,\n        \"superhero\": \"Superman\",\n        \"publisher\": \"DC Comics\",\n        \"alter_ego\": \"Kal-El\",\n        \"first_appearance\": \"Action Comics #1\",\n        \"characters\": \"Kal-El\",\n        \"img\": \"superman.jpg\"\n    },\n    {\n        \"id\": 2,\n        \"superhero\": \"Flash\",\n        \"publisher\": \"DC Comics\",\n        \"alter_ego\": \"Jay Garrick\",\n        \"first_appearance\": \"Flash Comics #1\",\n        \"characters\": \"Jay Garrick, Barry Allen, Wally West, Bart Allen\",\n        \"img\": \"flash.jpg\"\n    },\n    {\n        \"id\": 3,\n        \"superhero\": \"Wonder Woman\",\n        \"publisher\": \"DC Comics\",\n        \"alter_ego\": \"Princess Diana\",\n        \"first_appearance\": \"All Star Comics #8\",\n        \"characters\": \"Princess Diana\",\n        \"img\": \"wonderwoman.jpg\"\n    },\n    {\n        \"id\": 4,\n        \"superhero\": \"Black Canary\",\n        \"publisher\": \"DC Comics\",\n        \"alter_ego\": \"Dinah Drake\",\n        \"first_appearance\": \"Flash Comics #86\",\n        \"characters\": \"Dinah Drake, Dinah Lance\",\n        \"img\": \"BlackCanary.jpg\"\n    },\n    {\n        \"id\": 5,\n        \"superhero\": \"Iron Man\",\n        \"publisher\": \"Marvel Comics\",\n        \"alter_ego\": \"Tony Stark\",\n        \"first_appearance\": \"Tales of Suspense #39\",\n        \"characters\": \"Tony Stark\",\n        \"img\": \"IronMan.jpg\"\n    },\n    {\n        \"id\": 6,\n        \"superhero\": \"Thor\",\n        \"publisher\": \"Marvel Comics\",\n        \"alter_ego\": \"Thor Odinson\",\n        \"first_appearance\": \"Journey into Myster #83\",\n        \"characters\": \"Thor Odinson\",\n        \"img\": \"Thor.jpg\"\n    },\n    {\n        \"id\": 7,\n        \"superhero\": \"Hulk\",\n        \"publisher\": \"Marvel Comics\",\n        \"alter_ego\": \"Bruce Banner\",\n        \"first_appearance\": \"The Incredible Hulk #1\",\n        \"characters\": \"Bruce Banner\",\n        \"img\": \"Hulk.jpg\"\n    },\n    {\n        \"id\": 8,\n        \"superhero\": \"Wolverine\",\n        \"publisher\": \"Marvel Comics\",\n        \"alter_ego\": \"James Howlett\",\n        \"first_appearance\": \"The Incredible Hulk #180\",\n        \"characters\": \"James Howlett\",\n        \"img\": \"Wolverine.jpg\"\n    },\n    {\n        \"id\": 9,\n        \"superhero\": \"Daredevil\",\n        \"publisher\": \"Marvel Comics\",\n        \"alter_ego\": \"Matthew Michael Murdock\",\n        \"first_appearance\": \"Daredevil #1\",\n        \"characters\": \"Matthew Michael Murdock\",\n        \"img\": \"Daredevil.jpg\"\n    },\n    {\n        \"id\": 10,\n        \"superhero\": \"Silver Surfer\",\n        \"publisher\": \"Marvel Comics\",\n        \"alter_ego\": \"Norrin Radd\",\n        \"first_appearance\": \"The Fantastic Four #48\",\n        \"characters\": \"Norrin Radd\",\n        \"img\": \"SilverSurfer.jpg\"\n    }\n]","characters":"<xmp> <!-- RECUERDA QUITAR ESTAS ETIQUETAS -->\n<!DOCTYPE html>\n<html>\n\n<header>\n    <title id=\"titulo\">Titulo</title>\n    <!-- stylesheets -->\n    <link rel=\"stylesheet\" href=\"./css/photon.min.css\">\n</header>\n\n<body>\n    <div class=\"window\">\n        <header class=\"toolbar toolbar-header\">\n            <h1 class=\"title\">\n                TOOLBAR TITLE\n            </h1>\n        </header>\n        <div class=\"window-content\">\n            <div class=\"pane-group\">\n                <div id=\"izquierdo\" class=\"pane-sm sidebar\">\n                    <button id=\"btnJsonArray1\" style=\"margin: 5px;\" class=\"btn btn-primary\">JSON a array (metodo 1)</button>\n                    <button id=\"btnJsonArray2\" style=\"margin: 5px;\" class=\"btn btn-primary\">JSON a array (metodo 2)</button>\n                    <button id=\"btnMuestraArray\" style=\"margin: 5px;\"class=\"btn btn-primary\">muestra array</button>\n                    <button id=\"btnArrayJson\" style=\"margin: 5px;\" class=\"btn btn-primary\">array a JSON</button>\n\n                </div>\n                <div id=\"derecho\" class=\"pane\">\n\n                </div>\n            </div>\n        </div>\n\n        <footer class=\"toolbar toolbar-footer\">\n            <h1 class=\"title\">\n                TOOLBAR FOOTER\n            </h1>\n        </footer>\n    </div>\n    <script src=\"./functions.js\"></script>\n</body>\n\n</html>","info":"//************************************** FILESYSTEM **************************************\nconst fs = require('fs');\n\nlet archivo = './data/superheroes.json';\nlet archivoSalida = './data/superheroesOUT.json';\nlet fichero ;\nlet objeto = new Array();\n\n//************************************** DEFINICIONES **************************************\nlet sidebarDerecho = document.getElementById(\"derecho\");\nlet btnJsonArray1 = document.getElementById(\"btnJsonArray1\")\nlet btnJsonArray2 = document.getElementById(\"btnJsonArray2\")\nlet btnMuestraArray = document.getElementById(\"btnMuestraArray\")\nlet btnArrayJson = document.getElementById(\"btnArrayJson\")\n\n//************************************** MAIN **************************************\n\n//************************************** LISTENERS **************************************\nbtnJsonArray1.addEventListener('click', () => {\n    leeUno();\n})\n\nbtnJsonArray2.addEventListener('click', () => {\n    leeDos();\n})\n\nbtnMuestraArray.addEventListener('click', () => {\n    muestraArray();\n})\n\nbtnArrayJson.addEventListener('click', () => {\n    arrayJson();\n})\n\n//************************************** FUNCIONES **************************************\nfunction leeUno() {\n    //Requiere invocar fs\n    fichero = fs.readFileSync(archivo);\n    objeto = JSON.parse(fichero);\n    fichero.close;\n    alert(\"fichero leido con exito\");\n}\n\nfunction leeDos(){\n    //No requiere nada\n    objeto = require(archivo);\n    alert(\"fichero leido con exito\");\n}\n\nfunction muestraArray(){\n    let contenido = \"<h1>SUPERS:</h1>\\n\"\n    for (let i = 0 ; i < objeto.length ; i++){\n        contenido = contenido + objeto[i].superhero + \"<br>\\n\"\n    }\n    sidebarDerecho.innerHTML = contenido;\n}\n\nfunction arrayJson(){\n    //Requiere invocar fs\n    fs.writeFileSync(archivoSalida, JSON.stringify(objeto));\n    fs.close;\n    alert(\"fichero guardado con exito\");\n}"},{"nombre":"APP Json1 array Json","main":"{\n    \"ingredientes\": [\n        \"Pepperoni\",\n        \"Salchicha\",\n        \"Parmesano\",\n        \"Olivas\",\n        \"Champiñón\",\n        \"Tomates\",\n        \"Anchoas\"\n    ]\n}","characters":"<xmp> <!-- RECUERDA QUITAR ESTAS ETIQUETAS -->\n<!DOCTYPE html>\n<html>\n\n<header>\n    <title id=\"titulo\">Titulo</title>\n    <!-- stylesheets -->\n    <link rel=\"stylesheet\" href=\"./css/photon.min.css\">\n</header>\n\n<body>\n    <div class=\"window\">\n        <header class=\"toolbar toolbar-header\">\n            <h1 class=\"title\">\n                TOOLBAR TITLE\n            </h1>\n        </header>\n        <div class=\"window-content\">\n            <div class=\"pane-group\">\n                <div id=\"izquierdo\" class=\"pane-sm sidebar\">\n                    <button id=\"btnJsonArray1\" style=\"margin: 5px;\" class=\"btn btn-primary\">JSON a array (metodo 1)</button>\n                    <button id=\"btnJsonArray2\" style=\"margin: 5px;\" class=\"btn btn-primary\">JSON a array (metodo 2)</button>\n                    <button id=\"btnMuestraArray\" style=\"margin: 5px;\"class=\"btn btn-primary\">muestra array</button>\n                    <button id=\"btnArrayJson\" style=\"margin: 5px;\" class=\"btn btn-primary\">array a JSON</button>\n\n                </div>\n                <div id=\"derecho\" class=\"pane\">\n\n                </div>\n            </div>\n        </div>\n\n        <footer class=\"toolbar toolbar-footer\">\n            <h1 class=\"title\">\n                TOOLBAR FOOTER\n            </h1>\n        </footer>\n    </div>\n    <script src=\"./functions.js\"></script>\n</body>\n\n</html>","info":"//************************************** FILESYSTEM **************************************\nconst fs = require('fs');\n\nlet archivo = './data/datos.json';\nlet archivoSalida = './data/datosOut.json';\nlet fichero ;\nlet objeto = new Array();\n\n//************************************** DEFINICIONES **************************************\nlet sidebarDerecho = document.getElementById(\"derecho\");\nlet btnJsonArray1 = document.getElementById(\"btnJsonArray1\")\nlet btnJsonArray2 = document.getElementById(\"btnJsonArray2\")\nlet btnMuestraArray = document.getElementById(\"btnMuestraArray\")\nlet btnArrayJson = document.getElementById(\"btnArrayJson\")\n\n//************************************** MAIN **************************************\n\n//************************************** LISTENERS **************************************\nbtnJsonArray1.addEventListener('click', () => {\n    leeUno();\n})\n\nbtnJsonArray2.addEventListener('click', () => {\n    leeDos();\n})\n\nbtnMuestraArray.addEventListener('click', () => {\n    muestraArray();\n})\n\nbtnArrayJson.addEventListener('click', () => {\n    arrayJson();\n})\n\n//************************************** FUNCIONES **************************************\nfunction leeUno() {\n    //Requiere invocar fs\n    fichero = fs.readFileSync(archivo);\n    objeto = JSON.parse(fichero);\n    fichero.close;\n    alert(\"fichero leido con exito\");\n}\n\nfunction leeDos(){\n    //No requiere nada\n    objeto = require(archivo);\n    alert(\"fichero leido con exito\");\n}\n\nfunction muestraArray(){\n    for (let i = 0 ; i < objeto.ingredientes.length ; i++){\n        alert(objeto.ingredientes[i]);\n    }\n}\n\nfunction arrayJson(){\n    //Requiere invocar fs\n    fs.writeFileSync(archivoSalida, JSON.stringify(objeto));\n    fs.close;\n    alert(\"fichero guardado con exito\");\n}"},{"nombre":"HTML label","main":"","characters":"<label id=\"label1\">Comentario</label>","info":"let label1 = document.getElementById(\"label1\");\n\nalert(label1.innerHTML);"},{"nombre":"JS_function cargaJSON()","main":"[\n    {\n        \"grupo\": \"7N\",\n        \"nombre\": \"nombre 1\",\n        \"nota\": \"7\"\n    },\n    {\n        \"grupo\": \"7N\",\n        \"nombre\": \"nombre 2\",\n        \"nota\": \"6\"\n    },\n    {\n        \"grupo\": \"7N\",\n        \"nombre\": \"nombre 3\",\n        \"nota\": \"6\"\n    },\n    {\n        \"grupo\": \"7N\",\n        \"nombre\": \"nombre 4\",\n        \"nota\": \"6\"\n    },\n    {\n        \"grupo\": \"7N\",\n        \"nombre\": \"nombre 5\",\n        \"nota\": \"5\"\n    }\n]","characters":"<table>\n    <thead>\n        <tr>\n            <th>Grupo</th>\n            <th>Nombre</th>\n            <th>Nota</th>\n        </tr>\n    </thead>\n    <tbody id=\"tabla\">\n\n    </tbody>\n</table>","info":"let tabla = document.getElementById(\"tabla\");\n\nfunction cargaJSON(){\n    datos = require(fileNames[0]);\n    let filas = \"\";\n    // recorro los datos\n    for (let i = 0; i < datos.length; i++) {\n        filas += `\n            <tr id=\"tr${i}\">\n            <td id=\"grupo`+ i + `\">` + datos[i].grupo + `</td>\n            <td id=\"nombre`+ i + `\" contenteditable=true>` + datos[i].nombre + `</td>\n            <td id=\"nota`+ i + `\" contenteditable=true>` + datos[i].nota + `</td>\n            </tr> `;\n    }\n    // pasa el string de contenidos a la tabla para su visualizacion\n    tabla.innerHTML = filas;\n    console.log(filas);\n}"},{"nombre":"HTML table","main":"","characters":"<table>\n    <caption>Contenido nutricional por cada 100 g de alimento.</caption>\n    <thead>\n        <tr>\n            <th>Alimento</th>\n            <th>Calorías (kCal)</th>\n            <th>Grasas (g)</th>\n            <th>Proteína (g)</th>\n            <th>Carbohidratos (g)</th>\n        </tr>\n    </thead>\n    <tbody id=\"ctabla\">\n        <tr>\n            <td>Arándano</td>\n            <td>49</td>\n            <td>0.2</td>\n            <td>0.4</td>\n            <td>12.7</td>\n        <tr>\n            <td>Plátano</td>\n            <td>90</td>\n            <td>0.3</td>\n            <td>1.0</td>\n            <td>23.5</td>\n        </tr>\n    </tbody>\n</table>","info":""},{"nombre":"JS_CODE select","main":"","characters":"<select id=\"desplegable\"></select>","info":"let desplegable = document.getElementById(\"desplegable\");\n\n//agregar varlores al desplegable ordenados alfabeticamente\nfunction desplegableAdd(texto) { \n    let opcion = document.createElement(\"option\");\n    opcion.text = texto;\n    let totalOpciones = desplegable.options.length;\n    // Recorre opciones y busca posición adecuada para la nueva opción\n    for (let i = 0; i < totalOpciones; i++) {\n        if (texto < desplegable.options[i].text) {\n            desplegable.add(opcion, i);\n            return; // Sal del bucle\n        }\n    }\n    // Si la nueva opción debe ir al final\n    desplegable.add(opcion);\n}\n\n//LEER VALORES DEL DESPLEGABLE\nfunction cambiaImg(){\n    if (desplegable.value==\"Estudios\"){\n        imagen.src = \"./imgs/estudios.png\";\n    }\n}\n\n//EVENTO\ndesplegable.addEventListener('change', () => {\n    ...\n});"},{"nombre":"HTML input radio","main":"","characters":"<input type=\"radio\" id=\"radio1\" name=\"grupoA\"> A\n<input type=\"radio\" id=\"radio2\" name=\"grupoA\" checked> B  \n<br><br>\n<input type=\"radio\" id=\"radio3\" name=\"grupoB\" checked> C\n<input type=\"radio\" id=\"radio4\" name=\"grupoB\" > D","info":"let radio1 = document.getElementById(\"radio1\");\nlet radio2 = document.getElementById(\"radio2\");\n\nradio1.addEventListener('click', () => {\n    if (radio1.checked) {\n        alert(radio1.value);\n    }\n})"},{"nombre":"HTML input checkbox","main":"","characters":"<input type=\"checkbox\" id=\"opcion1\">\n<label for=\"opcion1\">Opción 1</label><br>\n\n<input type=\"checkbox\" id=\"opcion2\">\n<label for=\"opcion2\">Opción 2</label><br>\n\n<input type=\"checkbox\" id=\"opcion3\">\n<label for=\"opcion3\">Opción 3</label>","info":"let opcion1 = document.getElementsByName(\"opcion1\");\n\nalert('Checkbox: ' + opcion1.checked);"},{"nombre":"JS_CODE Math.random()","main":"","characters":"","info":"// Obtiene un numero al azar\nfunction rnd(max){\n    //0 no es una respuesta valida\n    return  Math.floor(Math.random() * max) + 1;\n}"},{"nombre":"HTML hr (division horizontal)","main":"","characters":"<br>\n<hr style=\"width: 90%; margin:auto;\"> <!-- linea horizontal -->","info":""},{"nombre":"HTML input texto","main":"","characters":"<input type=\"texto\" id=\"texto\" placeholder=\"Tu texto aqui\"><br>","info":"let texto = document.getElementById(\"texto\");\n\ntexto.addEventListener('change',()=>{ \n    ...\n})"},{"nombre":"HTML img","main":"","characters":"<img id=\"imagen\" class=\"img-circle media-object pull-left\" src=\"./img/BlackCanary.jpg\" width=\"90\" height=\"105\">\n<img id=\"imagen2\" src=\"./img/BlackCanary.jpg\" style=\"float: left;\" width=\"90\" height=\"105\">","info":"let imagen = document.getElementById(\"imagen\");\n\nimagen.src = \"./imgs/A.jpg\";"},{"nombre":"JS_CODE string multilinea","main":"","characters":"","info":"let btn7 = document.getElementById(\"btn7\");\n\nbtn7.addEventListener(\"click\", (event) => {\n\t//TODO\n});"},{"nombre":"HTML button","main":"","characters":"<button id=\"btn6\" style=\"margin: 5px;\" class=\"btn btn-default\">btn gris ◄ </button>\n<button id=\"btn7\" style=\"margin: 5px;\" class=\"btn btn-primary\">btn azul ► </button>\n<button id=\"btn8\" style=\"margin: 5px;\" class=\"btn btn-positive\">btn verde</button>\n<button id=\"btn9\" style=\"margin: 5px;\" class=\"btn btn-negative\">btn rojo</button>\n<button id=\"btn10\" style=\"margin: 5px;\" class=\"btn btn-warning\">btn naranja</button>","info":"let btn7 = document.getElementById(\"btn7\");\n\nbtn7.addEventListener(\"click\", (event) => {\n\t//TODO\n});"},{"nombre":"JS split()","main":"","characters":"","info":"// Dividimos el array a partir del caracter _\nconst cadena = \"Hola_mundo!\";\nconst palabras = cadena.split(\"_\");\nconsole.log(palabras); // Salida: [\"Hola\", \"mundo!\"]\n"},{"nombre":"JS forEach","main":"","characters":"","info":"const array = [\"Elemento 1\", \"Elemento 2\", \"Elemento 3\"];\narray.forEach(function(elemento) {\n  console.log(elemento);\n});"},{"nombre":"JS splice()","main":"","characters":"","info":"let a = [\"a\",\"b\",\"c\",\"d\",\"e\"];\n//Splice elimina elementos a partir de una posicion y opcionalmente agrega elementos nuevos\n//Elimina 3 elementos desde la posicion 1\na.splice(1,3);\n//elimina 1 elemento desde la posicion 1\na.splice(1,1);\n//elimina 1 elemento desde la posicion 1 e inserta \"g\" y \"h\"\na.splice(1,1,\"g\",\"h\");\n//elimina 0 elementos desde la sposicion 1 e inserta \"i\"\na.splice(0,0,\"i\");"},{"nombre":"HTML textarea","main":"","characters":"<label>Comentario</label>\n<textarea id=\"comentario\" name=\"comentario\" rows=\"4\" cols=\"17\"></textarea>\n","info":""},{"nombre":"JS alert()","main":"","characters":"","info":"alert(\"Hola mundo\");\n"},{"nombre":"_Plantilla","main":"//deshabilita notificaciones de seguridad\nprocess.env.ELECTRON_DISABLE_SECURITY_WARNINGS = true;\n\nconst { app, BrowserWindow, dialog} = require('electron')\n//requisito de dialog\nrequire('@electron/remote/main').initialize()\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 1500,\n        height: 700,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    win.webContents.openDevTools()\n    //requisito de dialog\n    require(\"@electron/remote/main\").enable(win.webContents) \n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)","characters":"<xmp> <!-- RECUERDA QUITAR ESTAS ETIQUETAS -->\n    <!DOCTYPE html>\n    <html>\n    <header>\n        <title id=\"titulo\">Titulo</title>\n        <!-- stylesheets -->\n        <link rel=\"stylesheet\" href=\"./css/photon.min.css\">\n    </header>\n\n    <body>\n        <div class=\"window\">\n            <header class=\"toolbar toolbar-header\">\n                <h1 class=\"title\">\n                    TOOLBAR TITLE\n                </h1>\n            </header>\n            <div class=\"window-content\">\n                <div class=\"pane-group\">\n                    <div class=\"pane-sm sidebar\">\n                        SIDEBAR IZQUIERDO\n                    </div>\n                    <div class=\"pane\">\n                        PANNEL DERECHO\n                    </div>\n                </div>\n            </div>\n\n            <footer class=\"toolbar toolbar-footer\">\n                <h1 class=\"title\">\n                    TOOLBAR FOOTER\n                </h1>\n            </footer>\n        </div>\n        <script src=\"./functions.js\"></script>\n    </body>\n\n    </html>\n</xmp>","info":"//************************************** FILESYSTEM **************************************\nconst fs = require('fs');\n\n//************************************** DEFINICIONES **************************************\nconst remote = require('@electron/remote');\nconst { dialog } = require('@electron/remote');\n\n//************************************** MAIN **************************************\n//************************************** LISTENERS **************************************\n//************************************** FUNCIONES **************************************"},{"nombre":"JS dialog.showMessageBox()","main":"const { app, BrowserWindow, dialog} = require('electron')\n//requisito de dialog\nrequire('@electron/remote/main').initialize()\n\nfunction createWindow() {\n    // Crea la ventana del navegador.\n    let win = new BrowserWindow({\n        width: 800,\n        height: 600,\n        webPreferences: {\n            nodeIntegration: true,\n            contextIsolation: false\n        }\n    })\n    // quita el menu por defecto de chromium\n    win.setMenu(null);\n    // y carga el index.html de la aplicación.\n    win.loadFile('index.html')\n    //para mostrar en la ventana la herramientas de desarrollo de chrome:\n    //win.webContents.openDevTools()\n    //requisito de dialog\n    require(\"@electron/remote/main\").enable(win.webContents) \n}\n\n\n//cuando la aplicación electron está lista (todos los procesos generados)\n//mediante app.on llamamos a la función que se va ha encargar de lanzar las\n//ventanas:\napp.on('ready', createWindow)","characters":"INTRODUCIR EN TERMINAL EN CASO DE NECESITAR LAS NOTIFICACIONES: \nnpm install @electron/remote  ","info":"const { dialog } = require('@electron/remote')\nconst options;\n\noptions = {\n    type: 'none',\n    title: 'none',\n    message: 'Este es un mensaje none',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'info',\n    title: 'Info',\n    message: 'Este es un mensaje informativo',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'error',\n    title: 'error',\n    message: 'Este es un mensaje error',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'question',\n    title: 'question',\n    message: 'Este es un mensaje question',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'warning',\n    title: 'warning',\n    message: 'Este es un mensaje warning',\n};\ndialog.showMessageBox(options)\n\n\noptions = {\n    type: 'question',\n    title: 'Pregunta',\n    message: '¿Quieres continuar?',\n    buttons: ['Sí', 'No'],\n    defaultId: 1, //btn por defecto (0/1)\n};\nlet respuestaUsuario = dialog.showMessageBoxSync(options);"}]